// Hibernate recomienda utilizar las librerías de JPA (un estándar) para importar
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
// indica que la clase se convierte en una clase entidad
@Entity// indica que realice un mapeo entre esta clase y la tabla estudiante
@Table(name="estudiante")
public class Estudiante {
// el atributo id será una clave primaria única
@Id
// autoincremental
@GeneratedValue(strategy = GenerationType.IDENTITY)/*
en este caso (y en los siguientes), el atributo name es redundante porque tiene el
mismo
nombre que tendrá la columna de la base de datos
*/
// id (atributo) --> id (columna en la tabla estudiante)
@Column(name="id")
private int id;
// nombre (atributo) --> nombre (columna en la tabla estudiante)
@Column(name="nombre")
private String nombre;
// apellidos (atributo) --> apellidos (columna en la tabla estudiante)
@Column(name="apellidos")
private String apellidos;
// edad (atributo) --> edad (columna en la tabla estudiante)
@Column(name="edad")
private int edad ;
// es obligatorio que exista un constructor por defecto
public Estudiante() {}
// es recomendable definir un constructor parametrizado con todos los atributos
(excepto el id)
// este método puede generarse automáticamente con Eclipse
public Estudiante(String nombre, String apellidos, int edad) {
super();
this.nombre = nombre;
this.apellidos = apellidos;
this.edad = edad;
}